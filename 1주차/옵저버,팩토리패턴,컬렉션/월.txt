[ 인터페이스( or 디자인패턴?) 란 무엇이고 어디에 쓰는가? ]


인터페이스 : 
	1. 클래스가 가지고 있는 메소드의 집합(어떤 클래스의 인터페이스라고 할경우)
	2. 인터페이스 키워드를 사용해서 선언된것(인터페이스 클래스)


디자인 패턴 :
	클래스 라이브러리(부품이되는 프로그램)가 아니다. 더 일반적인 개념임.
	부품이 어떻게 조립되어 있고, 각각의 부품이 어떻게 관련되서 큰 기능을 발휘하는지를 표현한것이다.

	디자인 패턴은 클래스의 재이용화를 촉진함.
	즉, 클래스를 부품처럼 사용할 수 있게하고 하나의 부품을 수정해도 다른 부품에 큰 영향없이 적은 수정만으로 	끝낼 수 있다는 것을 의미한다.
	목표는 프로그램의 재이용을 가능하게 하는 것




[ 팩토리 패턴 코딩 ]
	

[ 옵저버 패턴 코딩 ]
	옵저버는 관찰자라는 의미이지만 실제로는 능동적으로 관찰하는 것이 아니라 관찰 대상으로 부터 전달되는것을  	수동적으로 기다리고 있다.



자바 콜렉션 인터페이스 자료구조 알고리즘 코딩

	Collecrion 인터페이스 :
		List, Set, Queue 타입 구현의 모태가 되는 인터페이스
		여러개의 객체를 하나의 객체에 담아 처리할 때 공통적으로 사용되는 여러 메소드들을 선언해놈.

	자료구조 :
		어떤 정보를 담는것을 의미.
		배열과 같이 데이터를 담아 놓고 필요할 때 꺼내어 사용하기 위해서 존재.

	-순서가 있는 목록(List) 형
	-순서가 중요하지 않은 셋(set) 형
	-먼저 들어온 것이 먼저 나가는 큐(Queue) 형
	-키-값(key-value)으로 저장되는 맵(Map) 형



	List :
		순서가 있다.
		목록을 저장할 때 사용. 크기가 변하는 배열이라고 생각하면 이해가 쉽다.
		중복 허용.
		ArrayList, LinkedList 가 많이 사용됨.
	Set :
		List 와 비슷하나 데이터의 순서가 중요하지 않다.
		중복 불가. 중복을 없앨때 유용.
		HashSet, TreeSet 이 많이 사용됨.
	Queue :
		데이터를 순차적으로 처리하기 위한 인터페이스(선입선출)
		LinkedList 가 많이 사용됨.
	Map :
		중복되지 않는 키key와 그키와 연결되어 있는 값value이 쌍으로 묶여 있는 자료구조.
		따라서 Collecrion 인터페이스를 확장하지 않았다.
		key는 중복되면 안되지만 value는 key만 다르다면 중복되어도 상관 없다.
		HashMap, Hashtable, TreeMap 을 많이 사용.
		


	해시셋 :
		해시 함수를 이용하여 데이터를 해시테이블내의 주소로 변환.
		충돌이 일어날 경우 선형탐색, +링크드리스트, +트리셋, 테이블 크기를 늘린후 재해싱등을 사용.